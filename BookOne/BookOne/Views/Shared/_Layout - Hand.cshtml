<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - BookOne</title>

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")


    <style type="text/css">
        .container-fluid .navbar-brand {
            margin-left: -200px;
        }

        #MyNavbar {
            background-color: rgba(0, 1, 1, 0.96);
            border-bottom: none;
            opacity: 0.69;
            filter: alpha(opacity=30)
        }

        .navbar-brand {
            font-size: 30px;
        }

        .navbar-nav {
            font-size: 25px;
        }

        .navbar {
            min-height: 80px;
        }

        .navbar-inverse .navbar-nav > li > a {
            color: #FFC0CB;
            opacity: 0.9;
        }

        .nav > li > a:hover {
            background-color: #FCC;
        }

        .navbar-inverse .navbar-brand {
            color: #FFC0CB;
        }


        body {
            margin: 0;
            padding: 0;

            background-image: linear-gradient(rgb(6, 9, 150, 0.9),rgba(0,0,0,0.3)), url('../../Content/images/ContentsCut1.jpg');
            background-repeat: no-repeat;
            
            width: 100%;
            height: 100vh;
            background-size: cover;
            display: flex;
            align-items: center;
            justify-content: center;
            background-attachment: fixed;
        }


        .ImageText {
            
            color: #fff;
            width: 100%;
            height: 100vh;
            background-size: cover;
            display: flex;
            align-items: center;
            justify-content: center;

            background-attachment: fixed;
        }

        .video-container {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }

            .video-container video {
                /* Make video to at least 100% wide and tall */
                min-width: 100%;
                min-height: 100%;
                /* Setting width & height to auto prevents the browser from stretching or squishing the video */
                width: auto;
                height: auto;
                /* Center the video */
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%,-50%);
                opacity: 0.2;
            }

        #listOfBooks {
            margin-top: 15%;
            font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
            font-size: 33px;
            color: rgba(255, 255, 255, 1);
            letter-spacing: 3px;
        }
    </style>

</head>
<body onload=" hideAll()" onclick="rotate()">

    <div class="ImageText">

        <div id="MyNavbar" class="navbar navbar-inverse navbar-fixed-top">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    @Html.ActionLink(":)", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
                </div>
                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li>@Html.ActionLink("Books", "Index", "Books")</li>
                        }
                        <li>@Html.ActionLink("My Books", "MyBooks", "Books")</li>
                        <li>@Html.ActionLink("My Hand", "MyHand", "Books")</li>
                        <li>@Html.ActionLink("Requests", "Requests", "Player")</li>
                    </ul>
                    @Html.Partial("_LoginPartial")

                    <form class="navbar-form navbar-right" role="search">
                        <div class="form-group">
                            <input id="searchInput" type="text" class="form-control" onkeyup="SearchFunction()" placeholder="Search">
                        </div>
                        <button type="submit" class="btn btn-default">User</button>
                    </form>

                </div>
            </div>
        </div>

        <div class="video-container">
            <video id="video" autoplay loop muted>
                <source src="~/Content/images/fishShadowMan.mp4" type="video/mp4" />
               
            </video>
        </div>

        <div class="container body-content">
            @RenderBody()
            <hr />
            <footer>
                @*<p>&copy; @DateTime.Now.Year - BookOne</p>*@
            </footer>
        </div>
    </div>

    @RenderSection("scripts", required: false)
    


    <script>

        function hideAll() {
            $('.this1').hide();
            $('.this2').hide();
            $('.this3').hide();
        }

        var n = 0;
        var i = 1;

        function rotate() {
            n = n + i;
            console.log(n);
            if (n === 0) {
                i = 1;
            }
            if (n === 1) {
                new function () {
                    $('.this1').show();
                }
            }
            if (n === 2) {
                new function () {
                    $('.this1').hide();
                    $('.this2').show();
                }
            }
            if (n === 3) {
                new function () {
                    $('.this2').hide();
                    $('.this1').show();
                }
            }
            if (n === 4) {
                n = 0;
                new function () {
                    $('.this1').hide();
                }
            }
            //if (n === 5) {
            //    new function () {
            //        $('.hide2').hide();
            //    }
            //}
            //if (n === 6) {
            //    n = 0;
            //    new function () {
            //        $('.hide1').hide();
            //    }
            //}
            console.log("new", n);
        }

    </script>

</body>
</html>

<script>
    function SearchFunction() {
        // Declare variables
        let input, filter, bookList, bookTitles, index, txtValue, bookAuthors = [];
        input = document.getElementById('searchInput');
        filter = input.value.toUpperCase();
        bookList = document.getElementById("listOfBooks");
        bookTitles = bookList.getElementsByClassName("bookTitle");

        // We cannot call directly forEach on bookTitles since it's a NodeList (a type of Array)
        // So we call the Array.prototype function and provide the nodeList as a parameter
        Array.prototype.forEach.call(bookTitles,
            book => bookAuthors.push(book.getElementsByTagName("td")[1].innerHTML));


        // Loop through all list items, and hide those who don't match the search query
        for (index = 0; index < bookTitles.length; index++) {
            let bookTitle = bookTitles[index].getElementsByTagName("td")[0];
            txtValue = bookTitle.innerHTML;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                bookTitles[index].style.display = "";
            } else {
                bookTitles[index].style.display = "none";
            }
        }

        // Loop through all list items, and hide those who don't match the search query
        for (index = 0; index < bookAuthors.length; index++) {
            let author = bookAuthors[index];
            if (author.toUpperCase().indexOf(filter) > -1) {
                console.log(author);
            }
        }
    }

</script>
