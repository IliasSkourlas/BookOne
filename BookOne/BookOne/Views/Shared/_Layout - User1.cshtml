<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - BookOne</title>

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")

   

    <style type="text/css">

        body {
            /*color: rgb(185, 131, 131);*/

            /*color: black;
            background-image: url('C:\Users\penel\source\repos\BookOne2\BookOne\BookOne\VideoImages\PeterPan.JPG');
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;*/

            /*background-color: rgba(43, 43, 43, 0.01);*/
        }

        /*.container {
            width: 1600px;
        }*/

        .navbar-inverse .navbar-brand {
            font-size: 30px;
            color: deeppink;
        }
       
            ul .nav a:hover {
            color: black !important;
        }

        #MyNavbar {

            background-color: transparent;
            border: solid;
            border-bottom: solid;
            border-color:white;
            
            opacity: 0.65;
            filter: alpha(opacity=30)
        }
        .navbar-nav > li > a {
            color: #9d9d9d;
            font-size: larger;
        }
        .form-control {
            color: #bfbfbf;
            font-size: large;
            padding: 6px 100px;
        }

        .table {
            font-size: 160%;
            padding: 27px;
            border: 10px solid white; /*#4CAF50;*/
        }
        .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td, .table > tbody > tr > td, .table > tfoot > tr > td {
            padding: 27px;
        }

        .table > tbody > tr > td, .table > tfoot > tr > td {
            padding: 27px;
            line-height: 1;
            vertical-align: top;
            border-top: 1px solid hsla(0, 0%, 100%, 0.05);
        }
        a {
            color: #c0c0c0;
            text-decoration: none;
        }
    </style>

</head>
<body onload="hideAll()">



    <div id="MyNavbar" class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink(":)", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    @*@if (User.Identity.IsAuthenticated)
                        {
                            <li>@Html.ActionLink("Books", "Index", "Books")</li>
                        }*@



                    <li>@Html.ActionLink("My Books", "MyBooks", "Books")</li>
                    <li>@Html.ActionLink("My Hand", "MyHand", "Books")</li>
                    <li>@Html.ActionLink("Ask", "Requests", "Player")</li>


                </ul>
                @Html.Partial("_LoginPartial")
                <form class="navbar-form navbar-right" role="search">
                    <div class="form-group">
                        <input id ="searchInput" type="text" class="form-control" onkeyup="SearchFunction()" placeholder="Search">
                    </div>
                    <button type="submit" class="btn btn-default">User</button>
                </form>
            </div>
        </div>
    </div>

    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            @*<video id="video" controls autoplay loop muted>
                <source src="\BookOne\VideoImages\fish2.mp4.mp4" type=video/mp4>
            </video>*@

            @*<p>&copy; @DateTime.Now.Year - BookOne</p>*@
        </footer>
    </div>

    

    @RenderSection("scripts", required: false)

    <script>

        function hideAll() {
            $('.this1').hide();
            $('.this2').hide();
            $('.this3').hide();
        }

        var n = 0;
        var i = 1;

        function rotate() {
            n = n + i;
            if (n === 0) {
                i = 1;
            }
            if (n === 1) {
                new function () {
                    $('.this1').show();
                }
            }
            if (n === 2) {
                new function () {
                    $('.this1').hide();
                    $('.this2').show();
                }
            }
            if (n === 3) {
                new function () {
                    $('.this2').hide();
                    $('.this1').show();
                }
            }
            if (n === 4) {
                n = 0;
                new function () {
                    $('.this1').hide();
                }
            }
            //if (n === 5) {
            //    new function () {
            //        $('.hide2').hide();
            //    }
            //}
            //if (n === 6) {
            //    n = 0;
            //    new function () {
            //        $('.hide1').hide();
            //    }
            //}
            console.log("new", n);
        }

    </script>

</body>
</html>

<script>
    function SearchFunction() {
        // Declare variables
        let input, filter, bookList, bookTitles, index, txtValue, bookAuthors = [];
        input = document.getElementById('searchInput');
        filter = input.value.toUpperCase();
        bookList = document.getElementById("listOfBooks");
        bookTitles = bookList.getElementsByClassName("bookTitle");

        // We cannot call directly forEach on bookTitles since it's a NodeList (a type of Array)
        // So we call the Array.prototype function and provide the nodeList as a parameter
        Array.prototype.forEach.call(bookTitles,
            book => bookAuthors.push(book.getElementsByTagName("td")[1].innerHTML));


        // Loop through all list items, and hide those who don't match the search query
        for (index = 0; index < bookTitles.length; index++) {
            let bookTitle = bookTitles[index].getElementsByTagName("td")[0];
            txtValue = bookTitle.innerHTML;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                bookTitles[index].style.display = "";
            } else {
                bookTitles[index].style.display = "none";
            }
        }

        // Loop through all list items, and hide those who don't match the search query
        for (index = 0; index < bookAuthors.length; index++) {
            let author = bookAuthors[index];
            if (author.toUpperCase().indexOf(filter) > -1) {
                console.log(author);
            }
        }
    }

</script>