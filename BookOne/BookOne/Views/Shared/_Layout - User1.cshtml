<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - BookOne</title>

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")


    <style type="text/css">

        #MyNavbar {
            background-color: #000000;
            border-bottom: none;
            opacity: 0.89;
            filter: alpha(opacity=30);
        }

        .video-container {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            pointer-events: none;
            background-attachment: fixed;
        }

            .video-container video {
                min-width: 100%;
                min-height: 100%;
                width: auto;
                height: auto;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%,-50%);
                opacity: 0.2;
                pointer-events: none;
                background-attachment: fixed;
                z-index: 1;
            }

        .header th {
            color: rgb(0, 255, 255);
        }

        #weAreHere a {
            color: rgb(0, 255, 255);
            
        }
        a:hover {
            color: rgba(0, 255, 255, 0.84);
            text-decoration: none;
        }

        .table {
            font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
            font-size: 18px;
            color: rgba(255, 255, 255, 1);
        }

        a {
            color: rgba(255, 255, 255, 0.8);
        }


        #canvas1 {
            border: 1px solid rgba(255, 216, 0, 0.3);
            background-color: rgba(255, 216, 0, 0.2);
        }
        .canvasContainer1 {
            position: fixed;
            left: 43%;
            right: 43%;
            min-width: 10%;
            top: 0px;
            bottom: 0px;
            z-index: 1;
            background-color: transparent;
        }
        .contextCanvas1 {
            position: absolute;
            width: 100%;
            height: 100%;
            left: 0px;
            top: 0px;
            z-index: 1;
        }



        #canvas2 {
            border: 1px solid rgba(255, 255, 255, 0.58);
            background-color: rgba(14, 14, 14, 0.86);
        }
        .canvasContainer2 {
            transition: left 1s;
            transition: opacity 1s;
            position: fixed;
            left: 100%;
            right: 0%;
            min-width: 10%;
            top: 0px;
            bottom: 0px;
            z-index: 1;
            background-color: transparent;
            opacity: 0;
        }
        .contextCanvas2 {
            position: absolute;
            width: 100%;
            height: 100%;
            left: 0px;
            top: 0px;
            z-index: 1;
        }
        /*.disapearclass {
            position: fixed;
            left: 99.99%;
            right: 0%;
            min-width: 10%;
            top: 0px;
            bottom: 0px;
            z-index: 1;
            background-color: transparent;
        }
        .appearclass {
            position: fixed;
            left: 60%;
            right: 0%;
            min-width: 10%;
            top: 140px;
            bottom: 170px;
            z-index: 1;
        }*/

    </style>

</head>

<body onload=" hideAll()">

    <div class="video-container">
        @Html.Partial("_VideoPartial")
    </div>



    <div id="MyNavbar" class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button id="NotThis1" type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink(":)", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">


                <ul class="nav navbar-nav">
                    @Html.Partial("_weAreHerePatial")
                </ul>


                <form class="navbar-form navbar-right" role="search">
                    <div class="form-group">
                        <input id="searchInput" type="text" class="form-control" onkeyup="SearchFunction()" placeholder="Search">
                    </div>
                    <button type="submit" class="btn btn-default">?</button>
                </form>

            </div>
        </div>
    </div>

    <div class="container body-content">


        @using Microsoft.AspNet.Identity
        @if (Request.IsAuthenticated)
        {
            using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
            {
                @Html.AntiForgeryToken()

                <ul class="nav navbar-nav navbar-right">
                    <li>
                        @Html.ActionLink(User.Identity.GetUserName(), "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
                    </li>
                    <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
                </ul>
            }
        }
        else
        {
            <ul class="nav navbar-nav navbar-right">
                <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
                <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
            </ul>
        }



        @RenderBody()


        <hr />
        <footer>
            @*<p>&copy; @DateTime.Now.Year - BookOne</p>*@
        </footer>
    </div>

    <div class="canvasContainer1" onclick="rotate()">
        <canvas id="canvas1" class="contextCanvas1"></canvas>
    </div>

    @*onclick=" disapearCanvas2()*@
    <div id="canvasContainer2" class="canvasContainer2" onclick=" ">
        <canvas id="canvas2" class="contextCanvas2"></canvas>
    </div>



    @RenderSection("scripts", required: false)



    <script>
        // CANVAS
        let canvas1 = document.getElementById("canvas1");

        canvas1.width = window.innerWidth;
        canvas1.height = window.innerHeight;

        let c = canvas1.getContext('2d');

        // CANVAS2
        let canvas2 = document.getElementById("canvas2");

        canvas2.width = window.innerWidth;
        canvas2.height = window.innerHeight;

        let c2 = canvas2.getContext('2d');


        // Player Text

        let name = "O Sotoiirios einai poly kalo paidi alla...plempas"
        c2.globalAlpha = 0.6;
        c2.font = "50px Geneva";
        c2.fillStyle = "white";
        //c2.textAlign = "center";



        c2.fillText(name, 100, 600);
        c2.fillStyle = "yellow";
        c2.fillText(name, 101, 601);

        c2.fillText(name, 102, 603);
        c2.fillStyle = "yellow";
        c2.fillText(name, 104, 605);
        ///////////////////////////

        c2.arc(500, 200, 100, 0, 1 * Math.PI);
        c2.strokeStyle = "cyan";
        c2.lineWidth = 40;
        c2.stroke();

        c2.beginPath();
        c2.arc(400, 100, 50, 0, 2 * Math.PI);
        c2.strokeStyle = "white";
        c2.lineWidth = 40;
        c2.stroke();

        c2.beginPath();
        c2.arc(600, 100, 50, 0, 2 * Math.PI);
        c2.strokeStyle = "white";
        c2.lineWidth = 40;
        c2.stroke();

        c2.beginPath();
        c2.arc(430, 100, 10, 0, 2 * Math.PI);
        c2.strokeStyle = "white";
        c2.lineWidth = 40;
        c2.stroke();

        c2.beginPath();
        c2.arc(630, 100, 10, 0, 2 * Math.PI);
        c2.strokeStyle = "white";
        c2.lineWidth = 40;
        c2.stroke();


        // PLAYER VISASBILITY 2
        // disappear
        $(document).ready(function () {
            $("#canvasContainer2").click(function () {
                $(".canvasContainer2").css("left", "99.99%");
                $(".canvasContainer2").css("opacity", 0);
            });
        });

        // appear
        $(document).ready(function () {
            $(".owner").click(function () {
                $(".canvasContainer2").css("left", "57%");
                $(".canvasContainer2").css("opacity", 1);
            });
        });

       


        //// PLAYER VISASBILITY 1
        //function appearCanvas2() {
        //    document.getElementById('canvasContainer2').setAttribute("class", "appearclass");
        //    console.log("appearclass");
        //}

        //function disapearCanvas2() {
        //    document.getElementById('canvasContainer2').setAttribute("class", "disapearclass");
        //};


        // SEARCH
        /////////////////////////////
        function SearchFunction() {
            // Declare variables
            let input, filter, bookList, bookTitles, index, txtValue, bookAuthors = [];
            input = document.getElementById('searchInput');
            filter = input.value.toUpperCase();
            bookList = document.getElementById("listOfBooks");
            bookTitles = bookList.getElementsByClassName("bookTitle");

            // We cannot call directly forEach on bookTitles since it's a NodeList (a type of Array)
            // So we call the Array.prototype function and provide the nodeList as a parameter
            Array.prototype.forEach.call(bookTitles,
                book => bookAuthors.push(book.getElementsByTagName("td")[1].innerHTML));


            // Loop through all list items, and hide those who don't match the search query
            for (index = 0; index < bookTitles.length; index++) {
                let bookTitle = bookTitles[index].getElementsByTagName("td")[0];
                txtValue = bookTitle.innerHTML;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    bookTitles[index].style.display = "";
                } else {
                    bookTitles[index].style.display = "none";
                }
            }

            // Loop through all list items, and hide those who don't match the search query
            for (index = 0; index < bookAuthors.length; index++) {
                let author = bookAuthors[index];
                if (author.toUpperCase().indexOf(filter) > -1) {
                    console.log(author);
                }
            }
        }



    </script>
</body>
</html>

