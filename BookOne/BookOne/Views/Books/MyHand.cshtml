@model BookOne.ViewModels.BooksViewModel

@{
    Layout = "~/Views/Shared/_Layout - MyHand.cshtml";
    ViewBag.Title = "MyHand";
}


<style type="text/css">

    body {
        background-image: linear-gradient(rgb(6, 9, 150, 0.9),rgba(0,0,0,0.4)), url('../../Content/images/ContentsCut1.jpg');
        background-repeat: no-repeat;
        background-size: cover;
        background-attachment: fixed;
    }
</style>

<br />
<br />

<h2>My Unborrowed Books</h2>
<table id="listOfBooks" class="table">
    <tr class="header">
        <th class="col-md-6">
            Title
        </th>
        <th class="author col-md-6">
            Author
        </th>
        <th class="owner col-md-6"></th>
        <th class="timeLeft col-md-3"></th>
        <th class="timeLeft col-md-3"></th>
    </tr>

    @foreach (var item in Model.Books)
    {
        if (item.AvailabilityStatus == false) { continue; }
        <tr class="bookTitle">
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td class="author">
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td class="owner"></td>
            <td class="timeLeft"></td>
            <td class="timeLeft"></td>
        </tr>
    }
</table>


<h2>Borrowed Books from other Users</h2>
<table  id="listOfBooks" class="table">
    <tr class="header">
        <th class="col-md-6">
            Title
        </th>
        <th class="author col-md-6">
            Author
        </th>
        <th class="owner col-md-6">
            Owner
        </th>
        <th class="timeLeft col-md-3">
            Remaining Days
        </th>
        <th class="timeLeft col-md-3"></th>
    </tr>

    @foreach (var item in Model.BookCirculations)
    {
        if (item.BookAssociated.AvailabilityStatus == true) { continue; }
        <tr class="bookTitle">
            <td>
                @Html.DisplayFor(modelItem => item.BookAssociated.Title)
            </td>
            <td class="author">
                @Html.DisplayFor(modelItem => item.BookAssociated.Author)
            </td>
            <td class="owner">
                @Html.DisplayFor(modelItem => item.BookAssociated.Owner.ActualUsername)
            </td>
            <td class="timeLeft">
                @Html.DisplayFor(modelItem => item.DaysRemaining)
            </td>
            <td class="timeLeft">
                @if (item.BookAssociated.BorrowerAskedToReturnThisBook == false)
                {
                    @Html.ActionLink("Return Book", "ReturnBookRequest", "Player", new { CirculationId = item.BookCirculationId }, null)
                }
                @if(item.BookAssociated.BorrowerAskedToReturnThisBook == true)
                {
                    <span>You asked to return this book</span>
                }
            </td>
        </tr>
    }
</table>


<script>

    function hideAll() {
        $('.author').hide();
        $('.owner').hide();
        $('.timeLeft').hide()
    }

    var n = 0;
    var i = 1;

    function rotate() {
        n = n + i;
        if (n === 0) {

        }
        if (n === 1) {
            new function () {

                $('.author').show();

            }
        }
        if (n === 2) {
            new function () {
                $('.author').hide();
                $('.owner').show();
            }
        }
        if (n === 3) {
            new function () {
                $('.owner').hide();
                $('.timeLeft').show();


            }
        }
        if (n === 4) {
            n = 1;
            new function () {
                $('.author').show();
                $('.owner').hide();
                $('.timeLeft').hide();

            }
        }

        console.log("new", n);
    }
</script>