@model BookOne.ViewModels.BooksViewModel

@{
    ViewBag.Title = "MyBooks";
    Layout = "~/Views/Shared/_Layout - My.cshtml";
}

<style type="text/css">
    :root {
        --main-border-top-color: 1px solid rgba(255, 255, 255, 0.12);
    }

    body {
        background-image: linear-gradient(rgba(22, 69, 31, 0.79),rgba(5, 48, 15, 0.32)), url('../../Content/images/Drowing.jpg');
        background-repeat: no-repeat;
        background-size: cover;
        background-attachment: fixed;
    }
    .table > tbody > tr > td {
        padding: 8px;
        line-height: 1.42857143;
        vertical-align: top;
        /*border-top: none;*/
        border-top: var(--main-border-top-color);
    }
    #listOfBooks > tbody > tr.header > th {
        border-top: var(--main-border-top-color);
    }

    .table {
        margin-bottom: 0px;
    }
    div .borrowed .table > tbody > tr > th {
        padding: 0px;
        line-height: 1.42857143;
        vertical-align: top;
        border-top: var(--main-border-top-color);
    }
    #weAreHere a {
        color: rgb(0, 255, 255);
    }
    div.borrowed * {
        color: rgba(227, 229, 8, 0.74);
    }
    #excludedColor a {
        color: rgba(0, 255, 255, 0.68);
    }
    .editDelete a {
        color: rgba(0, 255, 255, 0.68);
    }
    tr:hover {
        background: rgba(255, 255, 255, 0.08);
    }
    div .borrowed tr:hover {
        background: rgba(17, 15, 3, 0.16);
    }

    #listOfBooks > tbody:nth-child(1) > tr > th:nth-child(1) {
        border-top: var(--main-border-top-color);
    }
    #listOfBooks > tbody {
        border-top: var(--main-border-top-color);
    }
    body > div.container.body-content > hr {
        border-top: var(--main-border-top-color);
        border-bottom: var(--main-border-top-color);
    }

</style>

<br />
<br />
<br />

<p>
    @Html.ActionLink("Add new", "Create")
</p>

@*<h2>My Books</h2>*@
<table id="listOfBooks" class="table">

    <tr class="header">
        <th class="col-md-6">
            Title
        </th>
        <th class="author col-md-6">
            Author
        </th>
        <th class="thisStatus col-md-6">
            Status
        </th>
        <th class="carrier col-md-6">
            Carrier
        </th>
        @*<th class="editDelete col-md-3">
            Actions
        </th>*@
    </tr>

    @foreach (var item in Model.Books)
    {
        if (item.AvailabilityStatus == false) { continue; }

        <tr class="bookTitle">
            <td>
                @Html.ActionLink( item.Title, "Details", new { id = item.BookId })
            </td>
            <td class="author">
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td class="thisStatus">
                @Html.DisplayFor(modelItem => item.BookStatus)
            </td>
            <td class="carrier"></td>
            @*<td class="editDelete"></td>*@
        </tr>
    }
</table>

@*<h2>Borrowed Books to other Users</h2>*@
<div  class="borrowed">

    <table id="listOfBooks" class="table table-hover">

            <tr class="header">
                <th class="col-md-6">
                    @*Title*@
                </th>
                <th class="author col-md-6">
                    @*Author*@
                </th>
                <th class="thisStatus col-md-6">
                    @*Borrowed On*@
                </th>
                <th class="carrier col-md-6">
                    @*Carrier*@
                </th>
                @*<th class="editDelete col-md-3">
                    Actions
                </th>*@
            </tr>

            @foreach (var item in Model.BookCirculations)
            {
                if (item.BookAssociated.AvailabilityStatus == true) { continue; }

                <tbody>
                    <tr class="bookTitle">
                        <td>
                            @Html.ActionLink(item.BookAssociated.Title, "BorrowedBookDetails", new { id = item.BookAssociated.BookId })
                        </td>
                        <td class="author">
                            @Html.DisplayFor(modelItem => item.BookAssociated.Author)
                        </td>
                        <td class="thisStatus">
                            @if (item.DaysRemaining > 1 || item.DaysRemaining == 0)
                            {
                                @Html.DisplayFor(modelItem => item.DaysRemaining) <span> days remaining</span>
                            }
                            @if (item.DaysRemaining == 1)
                            {
                                @Html.DisplayFor(modelItem => item.DaysRemaining) <span> day remaining</span>
                            }
                            @if (item.DaysRemaining == 14)
                            {
                                <script>
                                    
                                    myFunction();
                                    function myFunction() {
                                        setInterval(function () { $("#blink a").css("color", "red"); }, 500);
                                        setInterval(function () { $("#blink a").css("color", " #9d9d9d"); }, 1010);
                                        }
  
                                </script>
                            }


                        </td>
                        <td class="carrier">
                            @Html.DisplayFor(modelItem => item.BookAssociated.Carrier.ActualUsername)
                        </td>
                        @*<td id="excludedColor" class="editDelete">
                            @Html.ActionLink("Return Book", "ReturnBook", "Player", new { bookId = item.BookAssociated.BookId }, null)
                        </td>*@
                    </tr>
                </tbody>
            }
     </table>
</div>



<script>

    //function Blink() {
    //    console.log("Blink");
    //    $("#blink a").attr("color", "red");
    //}

    var n = 0;
    var i = 1;

    function rotate() {
        n = n + i;
        if (n === 0) {
            i = 1;
        }
        if (n === 1) {
            new function () {
                $('.author').show();
                $('.thisStatus').hide();
                $('.carrier').hide();
                $('.editDelete').hide();
            }
        }
        if (n === 2) {
            new function () {
                $('.author').hide();
                $('.carrier').show();
            }
        }
        if (n === 3) {
            new function () {
                $('.editDelete').show();
                $('.thisStatus').show();
                $('.carrier').hide()


            }
        }
        if (n === 4) {
            n = 1;
            new function () {
                $('.author').show();
                $('.editDelete').hide()
                $('.thisStatus').hide();

            }
        }

        console.log("new", n);
    }


</script>
