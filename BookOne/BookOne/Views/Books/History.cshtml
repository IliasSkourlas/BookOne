@using Microsoft.AspNet.Identity

@model BookOne.ViewModels.UserExchangeHistoryViewModel

@{
    ViewBag.Title = "History";
    Layout = "~/Views/Shared/_Layout - History - Copy.cshtml";
}

<style type="text/css">

    h4 {
        font-style: italic;
    }

    #back {
        color: rgba(254, 225, 0, 0.20);
        text-decoration: none;
        position: fixed;
    }

        #back:hover {
            color: var(--main-Header-color);
        }
</style>

<div class="container">
    <a id="back" href="/Books/MyBooks">Back</a>
</div>


<br /><br /><br />
<div class="row">
    <div class="col-md-10">
        <h2 font-style="italic">History</h2>
    </div>

    @using (Html.BeginForm("SaveHistory", "Books" , FormMethod.Post))
    {
        <div class="col-md-2">
            <input type="submit" name="savedata" value="Export History" class = "btn btn-default" />
        </div>
    }
    
</div>



<br />
<div id="take">
    <h4>Had taken</h4>
    <table class="table">
        <tr>
            <th class="col-md-3">
                Title
            </th>
            <th class="col-md-2">
                Owner
            </th>
            <th class="col-md-2">
                Borrowed On
            </th>
            <th class="col-md-2">
                Returned On
            </th>
            <th class="col-md-3">
                Status
            </th>
        </tr>

        @foreach (var item in Model.BookCirculations)
        {
            if (item.BookAssociated.Owner.Id == User.Identity.GetUserId()) { continue; }
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BookAssociated.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookAssociated.Owner.ActualUsername)
                </td>
                <td>
                    @item.BorrowedOn.Date.ToShortDateString()
                </td>
                <td>
                    @if (item.ReturnedOn == null)
                    {
                        <span>- - -</span>
                    }
                    @if (item.ReturnedOn != null)
                    {
                        item.ReturnedOn.Date.ToShortDateString();
                    }
                </td>
                <td>
                    @if (item.CirculationStatus == BookOne.BookOne_Domain.CirculationStatuses.Completed)
                    {
                        <span>You returned this book</span>
                    }
                    @if (item.CirculationStatus == BookOne.BookOne_Domain.CirculationStatuses.Borrowed)
                    {
                        <span>You have this book</span>
                    }
                </td>
            </tr>
        }

    </table>
</div>



<div id="give">
    <h4>Had given</h4>
    <table class="table">
        <tr>
            <th class="col-md-3">
                Title
            </th>
            <th class="col-md-2">
                Borrower
            </th>
            <th class="col-md-2">
                Borrowed On
            </th>
            <th class="col-md-2">
                Returned On
            </th>
            <th class="col-md-3">
                Status
            </th>
        </tr>

        @foreach (var item in Model.BookCirculations)
        {
            if (item.Borrower.Id == User.Identity.GetUserId()) { continue; }
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BookAssociated.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Borrower.ActualUsername)
                </td>
                <td>
                    @item.BorrowedOn.Date.ToShortDateString()
                </td>
                <td>
                    @if (item.ReturnedOn.Date == Convert.ToDateTime("01/01/1990"))
                    {
                        <span>- - -</span>
                    }
                    @if (item.ReturnedOn != null)
                    {
                        @item.ReturnedOn.Date.ToShortDateString()
                    }
                </td>
                <td>
                    @if (item.CirculationStatus == BookOne.BookOne_Domain.CirculationStatuses.Completed)
                    {
                        <span>Book has returned to your hands</span>
                    }
                    @if (item.CirculationStatus == BookOne.BookOne_Domain.CirculationStatuses.Borrowed)
                    {
                        <span>You gave this book</span>
                    }
                    @if (item.CirculationStatus == BookOne.BookOne_Domain.CirculationStatuses.Fresh)
                    {
                        <span>You accepted to give this book</span>
                    }
                </td>
            </tr>
        }

    </table>
</div>



<div id="yourRequests">
    <h4>Requests you made</h4>
    <table class="table">
        <tr>
            <th class="col-md-3">
                Title
            </th>
            <th class="col-md-4">
                Owner
            </th>
            <th class="col-md-2">
                Requested On
            </th>
            <th class="col-md-3">
                Status
            </th>
        </tr>

        @foreach (var item in Model.BookRequests)
        {
            if (item.BookRequested.Owner.Id == User.Identity.GetUserId()) { continue; }
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BookRequested.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookRequested.Owner.ActualUsername)
                </td>
                <td>
                    @item.RequestedOn.Date.ToShortDateString()
                </td>
                <td>
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Closed)
                    {
                        <span>Request is closed</span>
                    }
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.BorrowedBook)
                    {
                        <span>You have this book</span>
                    }
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Canceled)
                    {
                        <span>Request was canceled</span>
                    }
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Declined)
                    {
                        <span>You declined</span>
                    }
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Returning)
                    {
                        <span>You asked to return this book</span>
                    }
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Unanswered)
                    {
                        <span>Waiting for owner's response</span>
                    }
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Accepted)
                    {
                        <span>Owner accepted this request</span>
                    }
                </td>
            </tr>
        }

    </table>
</div>



<div id="requestsToYou">
    <h4>Requests to you</h4>
    <table class="table">
        <tr>
            <th class="col-md-3">
                Title
            </th>
            <th class="col-md-4">
                Requested By
            </th>
            <th class="col-md-2">
                Requested On
            </th>
            <th class="col-md-3">
                Status
            </th>
        </tr>

        @foreach (var item in Model.BookRequests)
        {
            if (item.RequestedBy.Id == User.Identity.GetUserId()) { continue; }
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BookRequested.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RequestedBy.ActualUsername)
                </td>
                <td>
                    @item.RequestedOn.Date.ToShortDateString()
                </td>
                <td>
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Closed)
                    {
                        <span>Request is closed</span>
                    }
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.BorrowedBook)
                    {
                        <span>You gave this book</span>
                    }
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Canceled)
                    {
                        <span>Request was canceled</span>
                    }
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Declined)
                    {
                        <span>You declined this request</span>
                    }
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Returning)
                    {
                        <span>User asked to return this book</span>
                    }
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Unanswered)
                    {
                        <span>User is waiting for your response</span>
                    }
                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Accepted)
                    {
                        <span>You accepted this request</span>
                    }
                </td>
            </tr>
        }

    </table>
</div>





<script>



    function hideAll() {
        $('#yourRequests').hide();
        $('#requestsToYou').hide();
        $('#give').hide();
    }

    var n = 0;
    var i = 1;

    function rotate() {
        n = n + i;
        if (n === 0) {
            i = 1;
        }
        if (n === 1) {
            console.log("new", n);
            new function () {
                $('#give').show();
                $('#take').hide();

            }
        }
        if (n === 2) {
            console.log("new", n);
            new function () {
                $('#yourRequests').show();
                $('#give').hide();


            }
        }
        if (n === 3) {
            console.log("new", n);
            new function () {
                $('#requestsToYou').show();
                $('#yourRequests').hide();




            }
        }
        if (n === 4) {

            new function () {
                console.log("new", n);

                $('#take').show();
                $('#requestsToYou').hide();
            }
        }
        if (n === 5) {
            n = 1;
            new function () {
                console.log("new", n);

                $('#give').show();
                $('#take').hide();
            }
        }


    }

</script>