@model BookOne.BookOne_Domain.BookRequest

@{
    ViewBag.Title = "Confirmation";
}

<h2>Borrowing Book Confirmation</h2>


@using (Html.BeginForm("BorrowingBookConfirmation", "Player", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>(Press Accept only if you are giving your book to the borrower right now)</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.BookRequestId)
    @Html.HiddenFor(model => model.OwnerDeclined)
    @Html.HiddenFor(model => model.RequestedOn)
    @Html.HiddenFor(model => model.RequestStatus)
    @Html.HiddenFor(model => model.BookRequested.BookId)
    @Html.HiddenFor(model => model.RequestedBy.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.BookRequested.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.BookRequested.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BookRequested.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RequestedBy.ActualUsername, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.RequestedBy.ActualUsername, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RequestedBy.ActualUsername, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Accept" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Requests")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
