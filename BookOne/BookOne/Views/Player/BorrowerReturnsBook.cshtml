@model BookOne.ViewModels.ReturnBookViewModel

@{
    Layout = "~/Views/Shared/_Layout - History.cshtml";
    
}

@{
    ViewBag.Title = "BorrowerReturnsBook";
}


<style type="text/css">

    .center {
        position: relative;
        text-align: center;
    }


    #back {
        color: white;
        text-decoration: none;
    }

        #back:hover {
            color: var(--main-Header-color);
        }

    #yes {
        color:rgba(255, 255, 255, 0.90);
        background-color: rgba(255, 255, 255, 0.11);
        display: inline-block;
        margin: 10px 40px;
        font-size: x-large;
        font-style:italic;
    }

        #yes:hover {
            background-color: rgba(0, 255, 255, 0.43);
            border-color: rgb(255, 36, 143);
        }

    #no {
        color: rgba(255, 0, 0, 0.62);
        background-color: rgba(255, 255, 255, 0.11);
        display: inline-block;
        margin: 10px 40px;
        font-size: x-large;
    }

        #no:hover {
            background-color: rgba(255, 0, 0, 0.36);
            border-color: red
        }

    #theBook {
        color: white;
        font-style: italic;
    }

    .question {
        display: inline;
        font-style: italic;
    }
    #theCarrier {
        display: inline;
        font-style: italic; 
        color: rgba(0, 255, 255, 0.83);
    }
    .clappsAndTreats *  {
        font-size:x-large;
          
    }


    .clapping:hover:after {
        color: hotpink;
        content:"?";
    }
    .noClapping:hover:after {
        color: rgba(0, 0, 0, 0.79);
        content: "?";
    }
    .shovel:hover:after {
        color: red;
        content: "?";
    }
    .treat:hover:after {
        color: green;
        content: "?";
    }
    .cookie:hover:after {
        color: yellow;
        content: "?";
    }

    .clapping:hover {
        color: hotpink;
       
    }

    .noClapping:hover {
        color: rgba(0, 0, 0, 0.79);
    }

    .shovel:hover {
        color: red;
       
    }

    .treat:hover {
        color: green;
       
    }

    .cookie:hover {
        color: yellow;
       
    }


    .form-control {
        background-color: rgba(255, 255, 255, 0.1);
        color: rgb(255, 255, 255);
    }


    tr:hover {
        background: rgba(253, 255, 233, 0.19);
    }


    .green a {
        color: rgb(0, 128, 0);
    }

        .green a:hover {
            color: rgb(0, 206, 29);
        }

    .red a {
        color: rgb(128, 0, 0);
    }

        .red a:hover {
            color: rgb(206, 0, 0);
        }

    .nutral a {
        color: var(--main-HeaderHover-color);
    }

        .nutral a:hover {
            color: var(--main-Header-color);
        }


    .video-container {
        position: absolute;
        top: 0;
        bottom: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        pointer-events: none;
        background-attachment: fixed;
    }

        .video-container video {
            min-width: 100%;
            min-height: 100%;
            width: auto;
            height: auto;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%,-50%);
            opacity: 0.35;
            pointer-events: none;
            background-attachment: fixed;
            
        }

    #video2 {
        opacity: 0.9;
        transition: opacity, 1s;
    }
    
</style>

<div>

    <a id="back" href="/Player/Requests">Back </a>
</div>

 <br /><br />





       <div class="center">

           <div class="dl-horizontal">

               <h1 class="question">Ok  </h1>
               <h1 id="theBook" class="question">
                   @Html.DisplayFor(model => model.Circulation.BookAssociated.Title)

               </h1>
               <h1 class="question">is back in your hands! </h1>

               <br /><br /><br />


               @*<dd>
                @Html.DisplayFor(model => model.Circulation.BorrowedOn)
            </dd>*@


           </div>

           @using (Html.BeginForm("OwnerGetsBackHisBook", "Player", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
           {
               @Html.AntiForgeryToken()
               @Html.HiddenFor(model => model.Circulation.BookCirculationId)
               @Html.HiddenFor(model => model.Circulation.BorrowedForXWeeks)
               @Html.HiddenFor(model => model.Circulation.Borrower.Id)
               @Html.HiddenFor(model => model.Circulation.Borrower)
               @Html.HiddenFor(model => model.Circulation.BorrowerReceivedBook)
               @Html.HiddenFor(model => model.Circulation.CirculationStatus)
               @Html.HiddenFor(model => model.Circulation.OwnerGaveBook)
               @Html.HiddenFor(model => model.Circulation.BookAssociated.BookId)
               @Html.HiddenFor(model => model.Circulation.RequestIdForThisCirculation)
               @Html.HiddenFor(model => model.ReactionGiven.ActionGiverId)
               @Html.HiddenFor(model => model.ReactionGiven.ActionReceiverId)
               @Html.HiddenFor(model => model.ReactionGiven.CirculationForThisReaction.BookCirculationId)
               @Html.HiddenFor(model => model.ReactionGiven.ReceivedOn)


               <h2 class="question">... </h2>
               <h2 id="theCarrier" class="question">
                   @Html.DisplayFor(model => model.Circulation.Borrower.ActualUsername)

               </h2>
               <div class="tooltipp ">
                   <h2 class="question">deserves </h2>
                   <span class="tooltiptextt">...give what  @Html.DisplayFor(model => model.Circulation.Borrower.ActualUsername) deserves </span>
               </div><br />


               <br /><br /><br />

               <div>
                   <div class="clappsAndTreats">

                       <div class="tooltipp ">
                           <label onclick="stopClapping()" class="noClapping"> @Html.RadioButtonFor(m => m.ReactionGiven.Choice, 0, new { @checked = true }) <span id="noClapping">No clapping </span></label><br />
                           <span class="tooltiptextt">...if that was not the best</span>
                       </div><br />
                       <div class="tooltipp ">
                           <label onclick="startClapping()" class="clapping">@Html.RadioButtonFor(m => m.ReactionGiven.Choice, 1) <span id="clapping">Clapping </span> </label><br />
                           <span class="tooltiptextt">...if your are happy</span>
                       </div><br />
                       <div class="tooltipp ">
                           <label class="shovel"> @Html.RadioButtonFor(m => m.ReactionGiven.Choice, 2) <span id="shovel">a shovel </span></label><br />
                           <span class="tooltiptextt">...if your book is kaputt</span>
                       </div><br />
                       <div class="tooltipp ">
                           <label class="treat"> @Html.RadioButtonFor(m => m.ReactionGiven.Choice, 3) <span id="treat">a treat </span></label><br />
                           <span class="tooltiptextt">...this will do you good!</span>
                       </div><br />
                       <div class="tooltipp ">
                           <label class="cookie"> @Html.RadioButtonFor(m => m.ReactionGiven.Choice, 4) <span id="cookie">a poisonous Cookie </span> </label>
                           <span class="tooltiptextt">...here take a cokkie!</span>
                       </div><br />

                   </div>

                   <br /><br /><br />


                   <div class="tooltipp">
                       <div>
                           <div class="form-group">
                               <div id="buttons">
                                   <input id="yes" type="submit" value="this is for  @Html.DisplayFor(model => model.Circulation.Borrower.ActualUsername)" class="btn btn-default" />

                               </div>
                           </div>
                       </div>
                       <span class="tooltiptextt">...this will influence @Html.DisplayFor(model => model.Circulation.Borrower.ActualUsername)</span>
                   </div>

               </div>
           }
       </div>



               <script>



                   function startClapping() {
                       $("#video3").css("display", "block");
                       //$("video").css("opacity", "0.9");
                       setInterval(function () {
                           $("video").css("opacity", "0.9");

                       }, 700);


                   }
                   function stopClapping() {
                       $("#video3").css("display", "none");;
                   }


               </script>
