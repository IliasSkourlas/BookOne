@using Microsoft.AspNet.Identity
@model IEnumerable<BookOne.BookOne_Domain.BookRequest>
@{
    Layout = "~/Views/Shared/_Layout - History.cshtml";
    ViewBag.Title = "MyHand";
}
@{
    ViewBag.Title = "Book Requests";
}



<style type="text/css">



    #back {
        color: white;
    }

        #back:hover {
            color: var(--main-Header-color);
        }

    .headers {
        color: hotpink;
    }

    .form-control {
        background-color: rgba(255, 255, 255, 0.1);
        color: rgb(255, 255, 255);
    }
    /*button, html input[type="button"], input[type="reset"], input[type="submit"] {
            background-color: rgba(255, 255, 255, 0.3);
            color: rgba(255, 255, 255, 0.8);
        }*/
    a {
        color: rgba(255, 255, 255, 0.8);
    }

        a:hover {
            color: var(--main-HeaderHover-color);
            text-decoration: none;
        }


    tr:hover {
        background: rgba(253, 255, 233, 0.19);
    }

    #give {
        /*color: rgb(251, 219, 132);*/
        /*color: rgb(155, 251, 132);*/
        color: var(--main-Header-color);
    }

    #take {
        /*color: rgb(255, 102, 102)*/
        color: var(--main-Header-color);
    }

    .green a {
        color: rgb(0, 128, 0);
    }

        .green a:hover {
            color: rgb(0, 206, 29);
        }

    .red a {
        color: rgb(128, 0, 0);
    }

        .red a:hover {
            color: rgb(206, 0, 0);
        }

    .nutral a {
        color: var(--main-HeaderHover-color);
    }

        .nutral a:hover {
            color: var(--main-Header-color);
        }




    .video-container {
        position: absolute;
        top: 0;
        bottom: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        pointer-events: none;
        background-attachment: fixed;
    }

        .video-container video {
            min-width: 100%;
            min-height: 100%;
            width: auto;
            height: auto;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%,-50%);
            opacity: 0.35;
            pointer-events: none;
            background-attachment: fixed;
            z-index: 1;
        }

    #video2 {
        opacity: 0.032;
    }
</style>



<div>
    <a id="back" href="/Books/Index">Back </a>
</div>
<br />
@ViewBag.RequestFailed
<br />

<h2 id="take">You want </h2>
<table class="table">
    <tbody>
        <tr class="headers">
            <th>
                @Html.DisplayNameFor(model => model.BookRequested.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BookRequested.Owner)
            </th>
            <th>
                Requested On
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            if (item.BookRequested.Owner.Id == User.Identity.GetUserId()) { continue; }
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BookRequested.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookRequested.Owner.ActualUsername)
                </td>
                <td>
                    @item.RequestedOn.Date.ToShortDateString()
                </td>
                <td>
                    @{
                        if (item.RequestedBy.Id == User.Identity.GetUserId() && item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Unanswered)
                        {
                            <span>(Waiting for owner's response) &nbsp; &nbsp; </span>

                            <span class="red"> @Html.ActionLink("Cancel", "CancelConfirmation", new { RequestId = item.BookRequestId })</span>
                        }

                        if (item.RequestedBy.Id == User.Identity.GetUserId() && item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Accepted && item.BookRequested.AvailabilityStatus == true)
                        {
                            <span class="green">
                                @Html.ActionLink("Accept Book", "BorrowerReceivedBook", new { RequestId = item.BookRequestId })
                            </span>
                            <span>&nbsp; &nbsp;</span>

                            <span class="red">@Html.ActionLink("Cancel", "CancelConfirmation", new { RequestId = item.BookRequestId })</span>
                        }

                        if (item.RequestedBy.Id == User.Identity.GetUserId() && item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Declined)
                        {
                            <span>(Request Declined) &nbsp; &nbsp; </span>

                            <span class="nutral">@Html.ActionLink("Remove Request", "CancelConfirmation", new { RequestId = item.BookRequestId })</span>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>


<br />
<br />


<h2 id="give">Someone wants </h2>
<table class="table">
    <tbody>
        <tr class="headers">
            <th>
                @Html.DisplayNameFor(model => model.BookRequested.Title)
            </th>
            <th>
                Requested By
            </th>
            <th>
                Requested On
            </th>
            <th>
                Phone Number
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            if (item.BookRequested.Owner.Id != User.Identity.GetUserId()) { continue; }
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BookRequested.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RequestedBy.ActualUsername)
                </td>
                <td>
                    @item.RequestedOn.Date.ToShortDateString()
                </td>
                <td>
                    @if (item.RequestedBy.Id != User.Identity.GetUserId())
                    {
                        @Html.DisplayFor(modelItem => item.RequestedBy.PhoneNumber)
                    }
                </td>
                <td>
                    @if (item.BookRequested.Owner.Id == User.Identity.GetUserId() && item.BookRequested.AvailabilityStatus == true)
                    {
                        <span class="green">@Html.ActionLink("Give Book", "BorrowerReceivesBook", new { RequestId = item.BookRequestId })</span> <span>&nbsp; &nbsp;</span>

                        <span class="red">@Html.ActionLink("Decline Request", "DeclineRequest", new { RequestId = item.BookRequestId })</span>

                        //Change color at MyBooks
                    }

                    @if (item.RequestStatus == BookOne.BookOne_Domain.RequestStatuses.Returning && item.BookRequested.AvailabilityStatus == false && item.BookRequested.Owner.Id == User.Identity.GetUserId())
                    {
                        <span class="nutral">@Html.ActionLink("Accept Book Back", "OwnerTakesBackHisBook", new { RequestId = item.BookRequestId })</span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>



