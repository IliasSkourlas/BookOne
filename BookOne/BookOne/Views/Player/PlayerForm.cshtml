@model BookOne.Models.ApplicationUser

@{
    Layout = "~/Views/Shared/_Layout - AddBook.cshtml";
}

@{
    ViewBag.Title = "Player";
}


<style type="text/css">
    #button:hover {
        background-color: rgba(0, 255, 255, 0.43);
        border-color: rgba(0, 255, 232, 0.61);
        color: rgba(255, 255, 255, 0.8);
    }
    #back a {
        color: rgba(0, 255, 255, 0.79);
        font-size: 20px;
    }

        #back a:hover {
            text-decoration: none;
            color: rgb(0, 255, 255);
        }
    h3 {
       font-style: italic;
    }
    .form-control {
        font: x-large;
        color: rgba(0, 255, 232, 0.61);
    }
</style>



<h3>...become a Player</h3>


@using (Html.BeginForm("ChangeUserToPlayer", "Player", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <br />
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.PostalCode)
        @Html.HiddenFor(model => model.RegisteredOn)
        @Html.HiddenFor(model => model.UserStatus)
        @Html.HiddenFor(model => model.XP_Points)
        @Html.HiddenFor(model => model.Email)
        @Html.HiddenFor(model => model.EmailConfirmed)
        @Html.HiddenFor(model => model.PasswordHash)
        @Html.HiddenFor(model => model.SecurityStamp)
        @Html.HiddenFor(model => model.PhoneNumberConfirmed)
        @Html.HiddenFor(model => model.TwoFactorEnabled)
        @Html.HiddenFor(model => model.LockoutEndDateUtc)
        @Html.HiddenFor(model => model.LockoutEnabled)
        @Html.HiddenFor(model => model.AccessFailedCount)
        @Html.HiddenFor(model => model.UserName)


        <div class="form-group">
            @Html.LabelFor(model => model.ActualUsername, "Username", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActualUsername, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActualUsername, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input  id="button" type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    <div id="back">
        @Html.ActionLink("Back", "MyBooks")
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
