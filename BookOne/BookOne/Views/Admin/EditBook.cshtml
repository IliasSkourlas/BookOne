@model BookOne.BookOne_Domain.Book

@{
    ViewBag.Title = "Edit Book";
    Layout = "~/Views/Shared/_Layout - My.cshtml";
}

<style type="text/css">
    
    body {
        background-image: linear-gradient(rgba(22, 69, 31, 0.79),rgba(5, 48, 15, 0.32)), url('../../Content/images/Drowing.jpg');
        background-repeat: no-repeat;
        background-size: cover;
        background-attachment: fixed;
    }


    .header th {
        color: var(--main-Header-color);
    }

    .adminDashboardHeader {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: 20px;
        text-align: center;
        color: rgba(255, 255, 255, 1);
    }

    #formText {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: 18px;
        color: rgba(255, 255, 255, 1);
    }

    #back {
        color: rgba(255, 255, 255, 0.8);
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: 18px;
    }

    .col-md-10 {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: 15px;
        color: rgb(255, 255, 255);
    }

    #formLabel {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: 15px;
        color: rgb(255, 255, 255);
    }

</style>


<h2 class="adminDashboardHeader">Edit Book</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BookId)
        @Html.HiddenFor(model => model.BorrowerAskedToReturnThisBook)
        @Html.HiddenFor(model => model.BookId)
        @Html.HiddenFor(model => model.BookId)

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.RegisteredOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RegisteredOn)
            </div>
        </div>

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.BookStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.BookStatus, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BookStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.AvailabilityStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.DisplayFor(model => model.AvailabilityStatus)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Books")
</div>
