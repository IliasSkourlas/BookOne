@model BookOne.Models.ApplicationUser

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_Layout - My.cshtml";
}


<style type="text/css">



    body {
        background-image: linear-gradient(rgba(22, 69, 31, 0.79),rgba(5, 48, 15, 0.32)), url('../../Content/images/Drowing.jpg');
        background-repeat: no-repeat;
        background-size: cover;
        background-attachment: fixed;
    }

    
    .header th {
        color: var(--main-Header-color);
    }

    .adminDashboardHeader {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: 20px;
        text-align: center;
        color: rgba(255, 255, 255, 1);
    }

    #formText {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: 18px;
        color: rgba(255, 255, 255, 1);
    }

    #back {
        color: rgba(255, 255, 255, 0.8);
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: 18px;
    }

    .col-md-10 {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: 15px;
        color: rgb(255, 255, 255);
    }

    #formLabel {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: 15px;
        color: rgb(255, 255, 255);
    }
    
</style>

<h2 class="adminDashboardHeader">EDIT USER</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.RegisteredOn)
        @Html.HiddenFor(model => model.PostalCode)
        @Html.HiddenFor(model => model.XP_Points)
        @Html.HiddenFor(model => model.PasswordHash)
        @Html.HiddenFor(model => model.SecurityStamp)
        @Html.HiddenFor(model => model.TwoFactorEnabled)
        @Html.HiddenFor(model => model.UserName)
        @Html.HiddenFor(model => model.LockoutEndDateUtc)

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.ActualUsername, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="formText" class="col-md-10">
                @Html.EditorFor(model => model.ActualUsername, new { htmlAttributes = new { @class = "form-control" } })
                <p formLabel> @Html.ValidationMessageFor(model => model.ActualUsername, "", new { @class = "text-danger" })</p>
            </div>
        </div>

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.Role == "Player")
                {
                    <p>@Html.RadioButtonFor(model => model.Role, "Player", new { @checked = true }) Player</p>
                    <p>@Html.RadioButtonFor(model => model.Role, "Administrator") Administrator</p>
                }
                @if (Model.Role == "Administrator")
                {
                    <p>@Html.RadioButtonFor(model => model.Role, "Player") Player</p>
                    <p>@Html.RadioButtonFor(model => model.Role, "Administrator", new { @checked = true }) Administrator</p>
                }
            </div>
        </div>

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.RegisteredOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p class="formLabel">@Html.DisplayFor(model => model.RegisteredOn)</p> 
            </div>
        </div>

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.UserStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.UserStatus, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.EmailConfirmed)
                </div>
            </div>
        </div>

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.PhoneNumberConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PhoneNumberConfirmed)
                    @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.LockoutEnabled)
                    @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="formLabel" class="form-group">
            @Html.LabelFor(model => model.AccessFailedCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="back">
    @Html.ActionLink("Back to List", "Index")
</div>
